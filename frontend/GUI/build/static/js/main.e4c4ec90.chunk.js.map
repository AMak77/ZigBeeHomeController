{"version":3,"sources":["pexels-photo-531880.jpeg","Auth/base.js","NavBar.js","components/DataDevice.js","components/parameters/State.js","components/parameters/Brightness.js","components/parameters/Color_temp.js","components/parameters/Color.js","components/ChangeParameters.js","screens/DevicesPage.js","modals/AddDivision.js","screens/DivisionsPage.js","modals/AddScene.js","screens/ScenesPage.js","modals/EditDevice.js","screens/DevicesSettingsPage.js","modals/AddGraphic.js","modals/AddCalculation.js","screens/StatisticsPage.js","Home.js","Auth/Auth.js","Auth/NewSignUp.js","Auth/NewLogin.js","Auth/PrivateRoute.js","App.js","index.js"],"names":["module","exports","app","firebase","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","useStyles","makeStyles","theme","root","flexGrow","NavBar","background","menuButton","marginRight","spacing","title","breakpoints","down","headerOptions","display","flex","justifyContent","CustomizedButton","withStyles","color","marginLeft","backgroundColor","Button","Brand","textDecoration","Typography","classes","useTheme","isMobile","useMediaQuery","useState","menu","setMenu","openMenu","Boolean","className","AppBar","position","Toolbar","variant","component","NavLink","to","IconButton","edge","aria-label","onClick","event","currentTarget","Menu","id","anchorEl","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","open","onClose","menuTitle","pageURL","map","menuItem","MenuItem","key","auth","signOut","DataDevice","props","data","tzoffset","Date","getTimezoneOffset","DataFromDevice","filter","device","device_id","splice","item","state","brightness","toFixed","color_temp","power","voltage","current","battery","consumption","temperature","humidity","pressure","occupancy","date","toISOString","slice","replace","paddingTop","ON","OFF","State","socket","Grid","container","xs","justify","size","emit","slider","width","Brightness","Slider","defaultValue","getAriaValueText","value","aria-labelledby","valueLabelDisplay","step","marks","min","max","onChangeCommitted","e","val","parseInt","ColorTemperature","icon","snowflakeCold","widht","height","fireIcon","primary","borderRadius","Color","setColor","showColorPicker","setShowColorPicker","a","picker","onChange","updatedColor","hex","style","SubmitColor","DevicesParameters","require","ChangeParameters","DeviceParameters","model","color_xy","sem","textAlign","grid","margin","paper","padding","opacity","CustomizedIconButton","float","top","right","DevicesPage","devices","setDevices","setData","isCancelled","useRef","useEffect","on","Link","aria-controls","aria-haspopup","startIcon","length","type","md","lg","ieeeAddr","Paper","gutterBottom","friendly_name","description","center","palette","border","boxShadow","shadows","AddDivision","setOpen","buttonStatus","setButtonStatus","newDivision","setNewDivision","handleClose","body","TextField","label","target","Dialog","scroll","aria-describedby","DialogTitle","DialogContent","dividers","DialogActions","disabled","name","customizedButton","left","DivisionsPage","divisions","setDivisions","alignItems","DeleteDivision","division","formControl","minWidth","selectEmpty","marginTop","AddScene","scenetype","setSceneType","startDate","setStartDate","err","setErr","Devices","Data","sensor","setSensor","sensorParameters","setSensorParameters","sensorParameter","setSensorParameter","conditionOperator","setConditionOperator","valueOperation","setValueOperation","atuator","setAtuator","atuatorParameter","setAtuatorParameter","atuatorParameters","setAtuatorParameters","atuatorValue","setAtuatorValue","operatortoSend","setOperatortoSend","descriptionElementRef","descriptionElement","focus","ObjectSensorParameters","Object","assign","bannedParameters","keys","includes","ObjectAtuatorParameters","FormControl","RadioGroup","row","FormControlLabel","control","Radio","labelPlacement","InputLabel","Select","labelId","InputLabelProps","shrink","now","InputProps","inputProps","checkDate","parse","isNaN","setSeconds","setMilliseconds","helperText","textField","preventDefault","conditionParameter","conditionState","thenParameter","thenState","ColorSwitch","switchBase","checked","track","Switch","ScenesPage","Scenes","setScenes","datenow","setDateNow","setInterval","scene","_id","changeStatus","modal","EditDevice","setName","placeholder","old_name","button","ooo","whiteColor","DevicesSettingsPage","vendor","select","FormHelperTextProps","option","RemoveDevice","AddGraphic","setDevice","parameter","setParameter","parameters","setParameters","ObjectParameters","toString","modalStyle1","overflow","AddCalculation","tax","setTax","errStartDate","setErrStartDate","errEndDate","setErrEndDate","setValue","endDate","setEndDate","element","reverse","startDateMilliseconds","getTime","endDateMilliseconds","ParameterData","Dates","AllDates","forEach","index","push","start","Math","num","end","TimeIntervals","i","Intervals","x","sum","numerator","reduce","b","denominator","noValidate","paddingRight","GraphicsPage","ListGraphics","setListGraphics","chartData","setChartData","paramData","dates","CutData","DataFromEachDevice","toLocaleString","labels","datasets","steppedLine","fill","lineTension","borderColor","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","pointBorderColor","pointBackgroundColor","pointBorderWidth","pointHoverRadius","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","pointRadius","pointHitRadius","options","scales","xAxes","ticks","maxTicksLimit","fontSize","gridLines","yAxes","n","DeleteGraphic","substring","indexOf","styles","backgroundImage","img","minHeight","io","transports","Home","exact","path","render","AuthContext","React","createContext","AuthProvider","children","currentUser","setCurrentUser","onAuthStateChanged","Provider","flexDirection","avatar","secondary","main","form","submit","withRouter","history","handleSignUp","useCallback","elements","email","password","createUserWithEmailAndPassword","alert","useContext","Container","maxWidth","CssBaseline","Avatar","onSubmit","required","fullWidth","autoFocus","handleLogin","signInWithEmailAndPassword","PrivateRoute","RouteComponent","rest","routeProps","App","Login","SignUp","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.e4c4ec90.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/pexels-photo-531880.b415e42d.jpeg\";","import * as firebase from \"firebase/app\";\nimport \"firebase/auth\";\n\nconst app = firebase.initializeApp({\n    apiKey: process.env.REACT_APP_FIREBASE_KEY,\n    authDomain: process.env.REACT_APP_FIREBASE_DOMAIN,\n    databaseURL: process.env.REACT_APP_FIREBASE_DATABASE,\n    projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\n    storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\n    messagingSenderId: process.env.REACT_APP_FIREBASE_SENDER_ID\n})\n\nexport default app;","import React, { useState } from 'react';\nimport { makeStyles, useTheme, withStyles } from '@material-ui/core/styles';\nimport { AppBar, Toolbar, Typography, IconButton, Menu, MenuItem, Button, useMediaQuery } from '@material-ui/core/';\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\nimport { NavLink } from 'react-router-dom';\nimport app from './Auth/base';\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n      flexGrow: 1\n    },\n    NavBar:{\n        background: '#3571b4'\n    },\n    menuButton: {\n      marginRight: theme.spacing(2)\n    },\n    title: {\n      [theme.breakpoints.down(\"xs\")]: {\n        flexGrow: 1\n      }\n    },\n    headerOptions: {\n      display: \"flex\",\n      flex: 1,\n      justifyContent:\"flex-end\"\n    }\n}));\n\nconst CustomizedButton = withStyles({\n    root:{\n        // background: '#fff',\n        // fontWeight: \"bold\",\n        color: '#fff',\n        marginLeft: 20,\n        '&:hover': {\n            backgroundColor: '#fff',\n            color: '#000'\n        }\n    }\n})(Button)\n\nconst Brand = withStyles({\n    root:{\n        color: '#fff',\n        textDecoration: 'none'\n    }\n})(Typography)\n\nexport default function NavBar() {\n\n    const classes = useStyles();\n    const theme = useTheme();\n\n    const isMobile = useMediaQuery(theme.breakpoints.down(\"xs\"));\n\n    const [menu, setMenu] = useState(null);\n    const openMenu = Boolean(menu);\n    // const [settings, setSettings] = useState(null);\n    // const openSettings = Boolean(settings);\n\n    const handleMenu = event => {\n        setMenu(event.currentTarget);\n    };\n\n    // const handleSettings = event => {\n    //     setSettings(event.currentTarget);\n    // };\n\n    const menuItems = [\n        {\n          menuTitle: \"Devices\",\n          pageURL: \"/\"\n        },\n        {\n          menuTitle: \"Divisions\",\n          pageURL: \"/divisions\"\n        },\n        {\n            menuTitle: \"Statistics\",\n            pageURL: \"/statistics\"\n        },\n        {\n          menuTitle: \"Scenes\",\n          pageURL: \"/scenes\"\n        },\n        // {\n        //   menuTitle: \"Graphics\",\n        //   pageURL: \"/graphics\"\n        // }\n      ];\n    \n    return (\n        <div className={classes.root}>\n            <AppBar position=\"static\" className={classes.NavBar}>\n                <Toolbar>\n                    <Brand variant=\"h6\" className={classes.title} component={NavLink} to=\"/\">\n                        ZIGBEE\n                    </Brand>\n                    { isMobile ? (\n                        <>\n                            <IconButton\n                                edge=\"start\"\n                                className={classes.menuButton}\n                                color=\"inherit\"\n                                aria-label=\"menu\"\n                                onClick={handleMenu}\n                            >\n                                <MenuIcon />\n                            </IconButton>\n                            <Menu\n                                id=\"menu-appbar\"\n                                anchorEl={menu}\n                                anchorOrigin={{\n                                    vertical: \"top\",\n                                    horizontal: \"right\"\n                                }}\n                                keepMounted\n                                transformOrigin={{\n                                    vertical: \"top\",\n                                    horizontal: \"right\"\n                                }}\n                                open={openMenu}\n                                onClick={() => setMenu(null)}\n                                onClose={() => setMenu(null)}\n                            >\n                                {menuItems.map(menuItem => {\n                                    const { menuTitle, pageURL } = menuItem;\n                                    return (\n                                        <MenuItem component={NavLink} to={pageURL} key={menuTitle}>\n                                                {menuTitle}\n                                        </MenuItem>\n                                    );\n                                })}\n                            </Menu>\n                            <IconButton\n                                edge=\"start\"\n                                className={classes.menuButton}\n                                color=\"inherit\"\n                                // aria-label=\"menu\"\n                                onClick={() => app.auth().signOut()}\n                            >\n                                <ExitToAppIcon />\n                            </IconButton>\n                        </>\n                        ) : (\n                            <div className={classes.headerOptions}>\n                                <CustomizedButton component={NavLink} to=\"/\">Devices</CustomizedButton>\n                                <CustomizedButton component={NavLink} to=\"/divisions\">Divisions</CustomizedButton>\n                                <CustomizedButton component={NavLink} to=\"/statistics\">Statistics</CustomizedButton>\n                                {/* <CustomizedButton component={NavLink} to=\"/graphics\">Graphics</CustomizedButton> */}\n                                <CustomizedButton component={NavLink} to=\"/scenes\">Scenes</CustomizedButton>\n                                <CustomizedButton onClick={() => app.auth().signOut()}><ExitToAppIcon /></CustomizedButton>\n                            </div>\n                        )}\n                        \n                    \n                </Toolbar>\n            </AppBar>\n        </div>\n    )\n}\n","import React from 'react'\n\nexport default function DataDevice(props) {\n    const data = props.data;\n\n    const tzoffset = (new Date()).getTimezoneOffset() * 60000;\n\n    const DataFromDevice = data.filter(device => device.device_id === props.id).splice(0,1);\n\n    return (\n        <div>\n            {\n                DataFromDevice.map(item => (\n                        <div key={item.device_id}>\n                            {item.state ? (item.state) : false}\n                            {item.brightness > -1 ? (<p>brightness: {(item.brightness*100/254).toFixed(0)}%</p>) : false}\n                            {item.color_temp > -1 ? (<p>color_temp: {(item.color_temp*100/510).toFixed(0)}%</p>) : false}\n                            {item.power > -1 ? <p>Power: {item.power}W</p> : false}\n                            {item.voltage > -1 ? (item.voltage > 1000 ? (<p>Voltage: {item.voltage} mV</p>) : (<p>Voltage: {item.voltage} V</p>) ) : false}\n                            {item.current > -1 ? <p>Current: {item.current}A</p> : false}\n                            {item.battery > -1 ? <p>Battery: {item.battery}%</p> : false}\n                            {item.consumption > -1 ? <p>Consumption: {item.consumption}W</p> : false}\n                            {item.temperature > -1 ? <p>Temperature: {item.temperature}ºC</p> : false}\n                            {item.humidity > -1 ? <p>Humidity: {item.humidity}%</p> : false}\n                            {item.pressure > -1 ? <p>Pressure: {item.pressure}mBar</p> : false}\n                            {item.occupancy === \"true\" ? <h3>Occupancy</h3> : false}\n                            {item.occupancy === \"false\" ? <h3>NO Occupancy</h3> : false}\n                            {item.date ? <h6>{new Date(new Date(item.date) - tzoffset).toISOString().slice(0, -5).replace(/T/, ' ')}</h6> : false}\n                        </div>\n                ))\n            }\n        </div>\n    )\n}\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport { withStyles, makeStyles } from '@material-ui/core';\n\nconst useStyles = makeStyles({\n  root: {\n      paddingTop: 10,\n      flexGrow: 1\n  }\n});\n\n\nconst ON = withStyles((theme) => ({\n    root: {\n      backgroundColor: '#fff',\n      color: '#008000',\n      '&:hover': {\n        backgroundColor: '#008000',\n        color: '#fff'\n      },\n    },\n  }))(Button);\n\nconst OFF = withStyles((theme) => ({\n    root: {\n      backgroundColor: '#fff',\n      color: '#ff0000',\n      '&:hover': {\n        backgroundColor: '#ff0000',\n        color: '#fff'\n      },\n    },\n  }))(Button);\n\nexport default function State(props) {\n    const socket = props.socket;\n\n    const classes = useStyles();\n    \n    return(\n      <Grid container className={classes.root}>\n            <Grid item xs>\n                <Grid container justify=\"center\"  spacing={2}>\n                    <Grid item>\n                      <ON size=\"small\" onClick={() => socket.emit(\"state\", {device_id: props.id, state: \"ON\"})}>ON</ON>\n                    </Grid>\n                    <Grid item>\n                      <OFF size=\"small\" onClick={() => socket.emit(\"state\", {device_id: props.id, state: \"OFF\"})}>OFF</OFF>\n                    </Grid>\n                </Grid>\n          </Grid>\n      </Grid>\n    )\n}\n","import React from 'react';\nimport Slider from '@material-ui/core/Slider';\nimport Grid from '@material-ui/core/Grid';\nimport { makeStyles } from '@material-ui/core/styles';\nimport BrightnessLowIcon from '@material-ui/icons/BrightnessLow';\nimport BrightnessHighIcon from '@material-ui/icons/BrightnessHigh';\n\nconst useStyles = makeStyles({\n    root: {\n        paddingTop: 30,\n        flexGrow: 1\n    },\n    slider:{\n        width: 150\n    }\n  });\n\nexport default function Brightness(props) {\n    const socket = props.socket;\n    const classes = useStyles();\n    \n\n    function valuetext(value) {\n        return `${value}%`;\n      }\n\n\n    return (\n        <Grid container className={classes.root}>\n                <Grid item xs>\n                    <Grid container justify=\"center\"  spacing={2}>\n                        <Grid item>\n                            <BrightnessLowIcon />\n                        </Grid>\n                        <Grid item>\n                            <Slider\n                                    className={classes.slider}\n                                    defaultValue={50}\n                                    getAriaValueText={valuetext}\n                                    aria-labelledby=\"discrete-slider\"\n                                    valueLabelDisplay=\"auto\"\n                                    step={25}\n                                    marks\n                                    min={0}\n                                    max={100}\n                                    onChangeCommitted={(e,val) => socket.emit(\"brightness\", {device_id: props.id, brightness: parseInt(val*254/100)})}\n                                />\n                        </Grid>\n                        <Grid item>\n                            <BrightnessHighIcon/>\n                        </Grid>\n                    </Grid>\n               </Grid>\n        </Grid>\n    )\n}\n","import React from 'react';\nimport Slider from '@material-ui/core/Slider';\nimport Grid from '@material-ui/core/Grid';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Icon  } from '@iconify/react';\nimport fireIcon from '@iconify/icons-mdi/fire';\nimport snowflakeCold from '@iconify/icons-wi/snowflake-cold'; \n\n\nconst useStyles = makeStyles({\n    root: {\n        paddingTop: 30,\n        flexGrow: 1\n    },\n    slider:{\n        width: 150\n    }\n  });\n\nexport default function ColorTemperature(props) {\n    const socket = props.socket;\n    const classes = useStyles();\n\n    function valuetext(value) {\n        return `${value}%`;\n      }\n\n\n\n    return (\n        <Grid container className={classes.root}>\n                <Grid item xs>\n                    <Grid container justify=\"center\"  spacing={2}>\n                        <Grid item>\n                            <Icon icon={snowflakeCold} widht=\"24\" height=\"24\"/>\n                        </Grid>\n                        <Grid item>\n                            <Slider\n                                    className={classes.slider}\n                                    defaultValue={50}\n                                    getAriaValueText={valuetext}\n                                    aria-labelledby=\"discrete-slider\"\n                                    valueLabelDisplay=\"auto\"\n                                    step={25}\n                                    marks\n                                    min={0}\n                                    max={100}\n                                    onChangeCommitted={(e,val) => socket.emit(\"color_temp\", {device_id: props.id, color_temp: parseInt(val*510/100)})}\n                                />\n                        </Grid>\n                        <Grid item>\n                            <Icon icon={fireIcon} widht=\"30\" height=\"30\"/>\n                        </Grid>\n                    </Grid>\n               </Grid>\n        </Grid>\n    )\n}\n","import React, { useState } from 'react';\nimport { HuePicker } from 'react-color';\nimport { makeStyles } from '@material-ui/core/styles';\nimport PaletteIcon from '@material-ui/icons/Palette';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\n\nconst useStyles = makeStyles({\n    primary:{\n        paddingTop: 10\n    },\n    root: {\n        paddingTop: 20,\n        flexGrow: 1,\n        background: '#2d2d2e',\n        borderRadius: 10\n    }\n  });\n\nexport default function Color(props) {\n    const socket = props.socket;\n    const classes = useStyles();\n    const [color, setColor] = useState('#fff');\n\n    const [showColorPicker, setShowColorPicker] = useState(false);\n\n    async function SubmitColor(){\n        socket.emit(\"ColorPicker\", {device_id: props.id, color: color})\n    }\n\n    return(\n        <div className={classes.primary}>\n            <Button onClick={() => setShowColorPicker(showColorPicker => !showColorPicker)}><PaletteIcon/></Button>\n            {\n                showColorPicker && (\n                    <Grid container className={classes.root}>\n                        <Grid item xs>\n                            <Grid container justify=\"center\">\n                                <Grid item>\n                                    <HuePicker\n                                            className={classes.picker}\n                                            color={color}\n                                            onChange={updatedColor => setColor(updatedColor.hex)}\n                                        />\n                                </Grid>\n                            </Grid>\n                            <Grid item>\n                                    <Button size=\"small\" style={{color: \"#fff\"}}onClick={()=> SubmitColor()}>Submit</Button>\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                )\n            }\n        </div>\n    )\n}\n","import React from 'react';\nimport State from './parameters/State';\nimport Brightness from './parameters/Brightness';\nimport ColorTemperature from './parameters/Color_temp';\nimport Color from './parameters/Color';\n\nconst DevicesParameters = require(\"./parameters/parameter.json\");\n\nexport default function ChangeParameters(props) {\n    const socket = props.socket;\n    const DeviceParameters = DevicesParameters.filter(device => device.model === props.model);\n\n    // const data = props.data;\n\n    return(\n        <div>\n            {DeviceParameters.map(item => (\n                <div key={item.model}>\n                    {item.state ? <State id={props.id} socket={socket} /> : false}\n                    {item.brightness ? <Brightness id={props.id} socket={socket} /> : false}\n                    {item.color_temp ? <ColorTemperature id={props.id} socket={socket} /> : false}\n                    {item.color_xy ? <Color id={props.id} socket={socket} /> : false}\n                </div>\n            ))}\n        </div>\n    )\n}\n","import React, { useEffect, useState, useRef } from 'react';\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\nimport { Typography, Grid, Paper, Button } from '@material-ui/core';\nimport { Link } from 'react-router-dom';\nimport SettingsIcon from '@material-ui/icons/Settings';\n\nimport DataDevice from '../components/DataDevice';\nimport ChangeParameters from '../components/ChangeParameters';\n\nconst useStyles = makeStyles((theme) => ({\n    sem: {\n        paddingTop: 100,\n        textAlign: \"center\"\n    },\n    grid: {\n        width: \"100%\",\n        margin: \"0px\"\n    },\n    paper: {\n        padding: theme.spacing(2),\n        textAlign: \"center\",\n        color: \"#fff\",\n        background: \"#2d2d2e\",\n        opacity: 0.8,\n        // background: \"transparent\",\n        borderRadius: '15px',\n        height: 450\n    }\n}))\n\nconst CustomizedIconButton = withStyles({\n    root:{\n        float: \"right\",\n        top: 15,\n        right: 20,\n        background: \"#2d2d2e\",\n        opacity: 0.7,\n        color: '#fff',\n        // border: \"0px\",\n        marginLeft: 20,\n        '&:hover': {\n            backgroundColor: '#fff',\n            color: '#000'\n        },\n    }\n})(Button)\n\n// const Title = withStyles({\n//     root: {\n//       textAlign:\"center\",\n//       color: \"#fff\",\n//       paddingTop: 10,\n//     }\n//   })(Typography);\n\nexport default function DevicesPage (props) {\n\n    const socket = props.socket;\n\n    const classes = useStyles();\n\n    const [devices, setDevices] = useState([]);\n\n    const [data, setData] = useState([]);\n\n    const isCancelled = useRef(false);\n    \n    useEffect(() => {\n        socket.emit(\"GETDEVICES\");\n        socket.emit(\"GETMEASUREMENTS\");\n        socket.on(\"Devices\", data => {\n             if(!isCancelled.current){\n                setDevices(data);\n            }\n                \n            })\n        socket.on(\"Measurements\", data => {\n            if(!isCancelled.current){\n                 setData(data);\n            }\n        })\n        return () => {\n            isCancelled.current = true;\n        }\n    },[socket])\n\n    return (\n        <div>\n            {/* <Title variant=\"h3\">\n                Devices Page\n            </Title> */}\n            <CustomizedIconButton\n                    size=\"small\"\n                    component={Link}\n                    to=\"/devices_settings\"\n                    aria-label=\"settings from user\"\n                    aria-controls=\"menu-appbar\"\n                    aria-haspopup=\"true\"\n                    color=\"inherit\"\n                    startIcon={<SettingsIcon/>}\n                >\n                    Settings\n            </CustomizedIconButton>\n            { devices.length ? (\n                <Grid container spacing={6} className={classes.grid}>\n                {devices.map(item => item.type !== \"Coordinator\" ? (\n                    <Grid item xs={12} md={6} lg={3} key={item.ieeeAddr}>\n                        <Paper className={classes.paper}>\n                            <Typography variant=\"h5\" gutterBottom>\n                                {item.friendly_name}\n                            </Typography>\n                            <Typography variant=\"subtitle1\" gutterBottom>\n                                {item.description}\n                            </Typography>\n                            <DataDevice id={item.ieeeAddr} data={data} />\n                            <ChangeParameters id={item.ieeeAddr} model={item.model} data={data} socket={props.socket} />\n                        </Paper>\n                        </Grid>\n                    \n                    ) : false )}\n                </Grid>\n                ) : (\n                    <div className={classes.sem}>\n                        <Typography variant=\"h3\">NO DEVICES TO SHOW</Typography>\n                    </div>\n                )\n            }\n            \n            \n        </div>\n    )\n}\n","import React, { useEffect, useState } from 'react';\nimport { Dialog, DialogActions, TextField, Button, DialogContent, DialogTitle, Typography } from '@material-ui/core';\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\n\n\nconst useStyles = makeStyles((theme) => ({\n    center: {\n        // paddingTop: 20,\n        textAlign: \"center\"\n    },\n    paper: {\n        position: 'absolute',\n        width: 400,\n        backgroundColor: theme.palette.background.paper,\n        border: '2px solid #000',\n        boxShadow: theme.shadows[5],\n        padding: theme.spacing(2, 4, 3),\n    }\n}))\n\n\nconst CustomizedIconButton = withStyles({\n    root:{\n        float: \"right\",\n        top: 15,\n        right: 20,\n        background: \"#2d2d2e\",\n        opacity: 0.7,\n        color: '#fff',\n        // border: \"0px\",\n        marginLeft: 20,\n        '&:hover': {\n            backgroundColor: '#fff',\n            color: '#000'\n        },\n    }\n})(Button)\n\nexport default function AddDivision(props){\n    const socket = props.socket;\n\n    const classes = useStyles();\n\n    const [open, setOpen] = useState(false);\n\n    const [buttonStatus, setButtonStatus] = useState(true);\n\n    const [newDivision, setNewDivision] = useState('');\n\n    useEffect(() => {\n        if(newDivision){\n            setButtonStatus(false);\n        } else {\n            setButtonStatus(true);\n        }\n    },[newDivision])\n\n    const handleOpen = () => {\n        setOpen(true);\n    }\n\n    const handleClose = () => {\n        setOpen(false);\n    }\n\n    function Division(event){\n        setNewDivision(event.target.value);\n    }\n\n    function AddDivision(){\n        socket.emit(\"NewDivision\", {name: newDivision});\n        setNewDivision('');\n        setOpen(false);\n    }\n\n    const body = (\n        <div className={classes.center}>\n            <Typography>Set the name of new division..</Typography>\n            <TextField id=\"new-division\" label=\"Write here..\" value={newDivision} onChange={Division}/>\n        </div>\n    )\n\n    return(\n        <div>\n            <CustomizedIconButton\n                    size=\"small\"\n                    onClick={handleOpen}\n                    startIcon={<AddCircleIcon/>}\n                >\n                    Add Division\n            </CustomizedIconButton>\n            {/* <button type=\"button\" onClick={handleOpen}>\n                Open Modal\n            </button> */}\n            <Dialog\n                open={open}\n                onClose={handleClose}\n                scroll={'paper'}\n                aria-labelledby=\"simple-modal-title\"\n                aria-describedby=\"simple-modal-description\"\n            >\n                <DialogTitle id=\"scroll-dialog-title\">Add Division</DialogTitle>\n                <DialogContent dividers>\n                    {body}\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={handleClose} color=\"secondary\">\n                        Cancel\n                    </Button>\n                    <Button\n                        disabled={buttonStatus}\n                        onClick={AddDivision}\n                        color=\"primary\"\n                    >\n                                Submit\n                            </Button>\n                </DialogActions>\n            </Dialog>\n        </div>\n    )\n}","import React, { useEffect, useState, useRef } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Grid, Paper, Typography } from '@material-ui/core';\n\nimport { IconButton } from '@material-ui/core';\nimport CloseIcon from '@material-ui/icons/Close';\n\nimport Modal from '../modals/AddDivision';\n\nconst useStyles = makeStyles((theme) => ({\n    sem: {\n        paddingTop: 100,\n        textAlign: \"center\"\n    },\n    grid: {\n        width: \"100%\",\n        margin: \"0px\"\n    },\n    paper: {\n        padding: theme.spacing(2),\n        textAlign: \"center\",\n        color: \"#fff\",\n        background: \"#2d2d2e\",\n        borderRadius: '15px',\n        height: 300,\n        opacity: 0.8,\n        // overflowY: 'unset',\n    },\n    customizedButton: {\n        // position: 'absolute',\n        position: \"relative\",\n        left: '95%',\n        top: '-9%',\n        backgroundColor: 'red',\n        color: 'white',\n    }\n}))\n\nexport default function DivisionsPage(props) {\n\n    const socket = props.socket;\n\n    const classes = useStyles();\n\n    const [divisions, setDivisions] = useState([]);\n    const [devices, setDevices] = useState([]);\n\n    const isCancelled = useRef(false);\n    \n    useEffect(() => {\n        socket.emit(\"GETDIVISIONS\");\n        socket.emit(\"GETDEVICES\")\n        socket.on(\"Divisions\", data => {\n            if(!isCancelled.current){\n                setDivisions(data);\n           }\n        })\n        socket.on(\"Devices\", data => {\n            if(!isCancelled.current){\n                setDevices(data);\n           }\n        })\n        return () => {\n            isCancelled.current = true;\n        }\n    },[socket])\n\n    function DeleteDivision(item){\n        // event.preventDefault();\n        socket.emit(\"DeleteDivision\", {name: item});\n        socket.emit(\"GETDIVISIONS\");\n    }\n\n    return (\n        <div>\n            {/* <Title variant=\"h3\">\n                Divisions\n            </Title> */}\n            <Modal socket={socket}/>\n            {/* <CustomizedIconButton\n                    size=\"small\"\n                    component={Link}\n                    to=\"/divisions_settings\"\n                    aria-label=\"settings from user\"\n                    aria-controls=\"menu-appbar\"\n                    aria-haspopup=\"true\"\n                    color=\"inherit\"\n                    startIcon={<SettingsIcon/>}\n                >\n                    Divisions Settings\n            </CustomizedIconButton> */}\n            {\n                divisions.length ? (\n                    <Grid container spacing={6} className={classes.grid}>\n                        {divisions.map(item => (\n                            <Grid item xs={12} md={6} lg={3} key={item.name}>\n                                <Paper className={classes.paper}>\n                                    <Grid container justify=\"flex-end\" alignItems=\"flex-end\">\n                                        <IconButton style={{color: 'white'}} onClick={() => DeleteDivision(item.name)}>\n                                            <CloseIcon />\n                                        </IconButton>\n                                    </Grid>\n                                    <Typography variant=\"h5\" gutterBottom>\n                                        {item.name}\n                                    </Typography>\n                                    {devices.map(device => device.division === item.name ? (\n                                        <li key={device.ieeeAddr} style={{paddingTop: 10}}>\n                                            {device.friendly_name}\n                                        </li>\n                                    ): false)}\n                                </Paper>\n                            </Grid>\n                        ))}\n                    </Grid>\n                ) : (\n                    <div className={classes.sem}>\n                        <Typography variant=\"h3\">NO DIVISIONS TO SHOW</Typography>\n                    </div>\n                )\n            }\n            \n        </div>\n    )\n}\n","import React, { useEffect, useRef, useState } from 'react';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { Button, FormControl, RadioGroup, Radio, FormControlLabel, Select, MenuItem, TextField, InputLabel, Typography } from '@material-ui/core';\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\n\nconst useStyles = makeStyles((theme) => ({\n  center: {\n      paddingTop: 20,\n      textAlign: \"center\"\n  },\n  paper: {\n      position: 'absolute',\n      width: 400,\n      backgroundColor: theme.palette.background.paper,\n      border: '2px solid #000',\n      boxShadow: theme.shadows[5],\n      padding: theme.spacing(2, 4, 3),\n  },\n  formControl: {\n      textAlign:\"center\",\n      margin: theme.spacing(1),\n      minWidth: 120,\n    },\n    selectEmpty: {\n      marginTop: theme.spacing(2),\n    },\n}))\n\nconst CustomizedIconButton = withStyles({\n  root:{\n      float: \"right\",\n      top: 15,\n      right: 20,\n      background: \"#2d2d2e\",\n      opacity: 0.7,\n      color: '#fff',\n      // border: \"0px\",\n      marginLeft: 20,\n      '&:hover': {\n          backgroundColor: '#fff',\n          color: '#000'\n      },\n  }\n})(Button)\n\nexport default function AddScene(props) {\n  const [open, setOpen] = useState(false);\n  // const [scroll, setScroll] = useState('paper');\n  // const scroll = 'paper';\n\n  const socket = props.socket;\n\n    const tzoffset = (new Date()).getTimezoneOffset() * 60000;\n\n    const classes = useStyles();\n\n    // const [modalStyle] = useState(getModalStyle);\n\n    const isCancelled = useRef(false);\n\n    const [scenetype, setSceneType] = useState('Simple');\n    const [startDate, setStartDate] = useState(new Date());\n\n    const [err, setErr] = useState('');\n\n\n    const [Devices, setDevices] = useState([]);\n    const [Data, setData] = useState([]);\n    const [sensor, setSensor] = useState('');\n    const [sensorParameters, setSensorParameters] = useState([]);\n    const [sensorParameter, setSensorParameter] = useState('');\n    const [conditionOperator, setConditionOperator] = useState('');\n    const [valueOperation, setValueOperation] = useState('');\n    const [atuator, setAtuator] = useState('');\n    const [atuatorParameter, setAtuatorParameter] = useState('');\n    const [atuatorParameters, setAtuatorParameters] = useState([]);\n    const [atuatorValue, setAtuatorValue] = useState('');\n    const [operatortoSend, setOperatortoSend] = useState('');\n\n    const [buttonStatus, setButtonStatus] = useState(true);\n\n  const descriptionElementRef = useRef(null);\n  useEffect(() => {\n    if (open) {\n      const { current: descriptionElement } = descriptionElementRef;\n      if (descriptionElement !== null) {\n        descriptionElement.focus();\n      }\n    }\n  }, [open]);\n\n  useEffect(() => {\n    socket.emit(\"GETDEVICES\");\n    socket.emit(\"GETMEASUREMENTS\");\n    socket.on(\"Devices\", data => {\n      if(!isCancelled.current){\n        setDevices(data);\n      }\n    })\n    socket.on(\"Measurements\", data => {\n      if(!isCancelled.current){\n        setData(data);\n      }\n    })\n    return () => {\n      isCancelled.current = true;\n    }\n  },[socket])\n\nconst handleOpen = () => {\n    setOpen(true);\n}\n\nconst handleClose = () => {\n    setOpen(false);\n}\n\nuseEffect(() => {\n    setSensorParameter('');\n    setValueOperation('');\n    setConditionOperator('');\n  },[sensor])\n\n  useEffect(() => {\n    setAtuatorParameter('');\n    setAtuatorValue('');\n    setAtuatorParameter('');\n  },[atuator])\n\n  useEffect(() => {\n    let ObjectSensorParameters = Object.assign({}, ...Data.filter(item => item.device_id === sensor).splice(0,1))\n    let bannedParameters = ['_id','device_id','date','color','__v','linkquality'];\n    setSensorParameters(Object.keys(ObjectSensorParameters).filter(item => !bannedParameters.includes(item)))\n  },[sensor, Data])\n\n  useEffect(() => {\n    let ObjectAtuatorParameters = Object.assign({}, ...Data.filter(item => item.device_id === atuator).splice(0,1))\n    let bannedParameters = ['_id','device_id','date','color','__v','linkquality'];\n    setAtuatorParameters(Object.keys(ObjectAtuatorParameters).filter(item => !bannedParameters.includes(item)))\n  },[atuator, Data])\n\n   \n  useEffect(() => {\n    setConditionOperator('');\n    setValueOperation('');\n  }, [sensorParameter])\n\n  useEffect(() => {\n    if(conditionOperator === 'EQUALS TO'){\n      setOperatortoSend('===');\n    } else if (conditionOperator === 'DIFFERENT THAN'){\n      setOperatortoSend('!==')\n    } else if (conditionOperator === 'GREATER THAN'){\n      setOperatortoSend('>')\n    } else if (conditionOperator === 'SMALLER THAN'){\n      setOperatortoSend('<')\n    }\n  }, [conditionOperator])\n\n  function AddScene(event){\n    event.preventDefault();\n    if(scenetype === 'Simple'){\n      socket.emit(\"NewScene\", {\n        sensor: sensor,\n        conditionParameter: sensorParameter,\n        conditionOperator: operatortoSend,\n        conditionState: valueOperation,\n        atuator: atuator,\n        thenParameter: atuatorParameter,\n        thenState: atuatorValue\n      });\n    } else if (scenetype === 'Date'){\n      socket.emit(\"NewScene\", {\n        date: startDate,\n        atuator: atuator,\n        thenParameter: atuatorParameter,\n        thenState: atuatorValue\n      });\n    }\n    socket.emit(\"GETSCENES\");\n    setOpen(false);\n  }\n\n  useEffect(() => {\n    setSensor('');\n    setAtuator('');\n    setConditionOperator('');\n    setValueOperation('');\n    setAtuatorValue('');\n    setSensorParameter('');\n    setAtuatorParameter('');\n    if(scenetype === 'Date'){\n      setStartDate(new Date())\n    } else {\n      setStartDate('');\n    }\n  }, [scenetype])\n\n  useEffect(() => {\n    if(scenetype === 'Date' && startDate && atuator && atuatorParameter && atuatorValue){\n      setButtonStatus(false);\n    }\n    else if (scenetype === 'Simple' && sensor && sensorParameter && conditionOperator && valueOperation && atuatorParameter && atuatorValue){\n      setButtonStatus(false);\n    }\n    else {\n      setButtonStatus(true);\n    }\n  }, [scenetype, startDate, sensor, sensorParameter, conditionOperator, valueOperation, atuator, atuatorParameter, atuatorValue])\n\n\n  const body = (\n    // <div>\n        <form className={classes.center}>\n            <FormControl component=\"fieldset\">\n                    <RadioGroup row aria-label=\"position\" name=\"position\" value={scenetype} onChange={e => setSceneType(e.target.value)}>\n                        <FormControlLabel\n                            value=\"Simple\"\n                            control={<Radio color=\"primary\" />}\n                            label=\"Simple\"\n                            labelPlacement=\"top\"\n                        />\n                        <FormControlLabel\n                            value=\"Date\"\n                            control={<Radio color=\"primary\" />}\n                            label=\"Date\"\n                            labelPlacement=\"top\"\n                        />\n                    </RadioGroup>\n            </FormControl> <br/>\n            \n            {\n              scenetype === 'Simple' ? (\n                <>\n                <Typography variant=\"h5\">IF</Typography>\n                    <FormControl className={classes.formControl}>\n                    <InputLabel>Sensor</InputLabel>\n                      <Select \n                        value={sensor}\n                        onChange={(e) => setSensor(e.target.value)}\n                      >\n                        {\n                          Devices.map(device => (\n                            <MenuItem value={device.ieeeAddr} key={device.ieeeAddr}>{device.friendly_name}</MenuItem>\n                          ))\n                        }\n                      </Select>\n                    </FormControl>\n                    <FormControl className={classes.formControl}>\n                    <InputLabel>Parameter</InputLabel>\n                      <Select\n                        value={sensorParameter}\n                        onChange={(e) => setSensorParameter(e.target.value)}\n                      >\n                        {\n                          sensorParameters.map(item => (\n                            <MenuItem value={item} key={item}>{item}</MenuItem>\n                          ))\n                        }\n                      </Select>\n                    </FormControl>\n                    <FormControl className={classes.formControl}>\n                    <InputLabel>Operator</InputLabel>\n                      \n                        {\n                          sensorParameter === 'occupancy' || sensorParameter === 'state' ? (\n                            <Select\n                              value={conditionOperator}\n                              onChange={(e) => setConditionOperator(e.target.value)}\n                            >\n                            <MenuItem value=\"EQUALS TO\">===</MenuItem>\n                            </Select>\n                          ) : (\n                            <Select\n                              value={conditionOperator}\n                              onChange={(e) => setConditionOperator(e.target.value)}\n                            >\n                            <MenuItem value=\"EQUALS TO\">EQUALS TO</MenuItem>\n                            <MenuItem value=\"DIFFERENT THAN\">DIFFERENT THAN</MenuItem>\n                            <MenuItem value=\"GREATER THAN\">GREATER THAN</MenuItem>\n                            <MenuItem value=\"SMALLER THAN\">SMALLER THAN</MenuItem>\n                            </Select>\n                          )\n                        }\n                          \n                          {/* </div>\n                        ) : false} */}\n                        \n                      \n                    </FormControl>\n                    <FormControl className={classes.formControl}>\n                    \n                      {\n                        sensorParameter === 'state' ? (\n                          <>\n                            <InputLabel id=\"demo-simple-select-label\">StateValue</InputLabel>\n                            <Select\n                              labelId=\"demo-simple-select-label\"\n                              id=\"demo-simple-select\"\n                              value={valueOperation}\n                              onChange={(e) => setValueOperation(e.target.value)}\n                            >\n                              <MenuItem value=\"ON\">ON</MenuItem>\n                              <MenuItem value=\"OFF\">OFF</MenuItem>\n                          </Select>\n                          </>\n                        ) : sensorParameter === 'occupancy' ? (\n                          <>\n                            <InputLabel>StateValue</InputLabel>\n                            <Select\n                              label=\"Value\"\n                              value={valueOperation}\n                              onChange={(e) => setValueOperation(e.target.value)}\n                            >\n                              <MenuItem value=\"true\">true</MenuItem>\n                              <MenuItem value=\"false\">false</MenuItem>\n                          </Select>\n                          </>\n                        ) : sensorParameter === 'brightness' ? (\n                          <TextField label=\"Number between 0 - 254\" type=\"number\" InputLabelProps={{shrink: true}} value={valueOperation} onChange={(e) => {\n                            if (e.target.value>254)\n                              setValueOperation(254);\n                            else if(e.target.value<0)\n                              setValueOperation(0);\n                            else setValueOperation(e.target.value);\n                          }}/>\n                        ) : sensorParameter ==='color_temp' ? (\n                          <TextField label=\"Number between 0 - 508\" type=\"number\"  InputLabelProps={{shrink: true}} value={atuatorValue} onChange={(e) => {\n                            if(e.target.value>508){\n                              setValueOperation(508);\n                            } else if(e.target.value<0){\n                              setValueOperation(0);\n                            } else setValueOperation(e.target.value);\n                          }}/>\n                        ) : (\n                          <TextField label=\"Value\" type=\"number\" InputLabelProps={{shrink: true}} value={valueOperation} onChange={(e) => {\n                              if(e.target.value < 0)\n                                setValueOperation(0)\n                              else setValueOperation(e.target.value)\n                            }}/>\n                        )\n                      }\n                      \n                    </FormControl>\n                    <Typography variant=\"h5\">THEN</Typography>\n                    <FormControl className={classes.formControl}>\n                    <InputLabel>Atuator</InputLabel>\n                      <Select\n                        value={atuator}\n                        onChange={(e) => setAtuator(e.target.value)}\n                      >\n                        {\n                          Devices.map(device => (\n                            <MenuItem value={device.ieeeAddr} key={device.ieeeAddr}>{device.friendly_name}</MenuItem>\n                          ))\n                        }\n                      </Select>\n                    </FormControl>\n                    <FormControl className={classes.formControl}>\n                    <InputLabel>Parameter</InputLabel>\n                      <Select\n                        value={atuatorParameter}\n                        onChange={(e) => setAtuatorParameter(e.target.value)}\n                      >\n                        {\n                          atuatorParameters.map(item => (\n                            <MenuItem value={item} key={item}>{item}</MenuItem>\n                          ))\n                        }\n                      </Select>\n                    </FormControl>\n                    <FormControl className={classes.formControl}>\n                      {\n                        atuatorParameter === 'state' ? (\n                          <>\n                            <InputLabel>StateValue</InputLabel>\n                            <Select\n                              value={atuatorValue}\n                              onChange={(e) => setAtuatorValue(e.target.value)}\n                            >\n                              <MenuItem value=\"ON\">ON</MenuItem>\n                              <MenuItem value=\"OFF\">OFF</MenuItem>\n                          </Select>\n                          </>\n                        ) : atuatorParameter === 'occupancy' ? (\n                          <>\n                            <InputLabel>StateValue</InputLabel>\n                            <Select\n                              label=\"Value\"\n                              value={atuatorValue}\n                              onChange={(e) => setAtuatorValue(e.target.value)}\n                            >\n                              <MenuItem value=\"true\">true</MenuItem>\n                              <MenuItem value=\"false\">false</MenuItem>\n                          </Select>\n                          </>\n                        ) : atuatorParameter === 'brightness' ? (\n                            <TextField label=\"Number between 0 - 254\" type=\"number\" InputLabelProps={{shrink: true}} value={atuatorValue} onChange={(e) => {\n                              if (e.target.value>254)\n                                setAtuatorValue(254);\n                              else if(e.target.value<0)\n                              setAtuatorValue(0);\n                              else setAtuatorValue(e.target.value);\n                            }}/>\n                        ) : atuatorParameter ==='color_temp' ? (\n                          <TextField label=\"Number between 0 - 508\" type=\"number\"  InputLabelProps={{shrink: true}} value={atuatorValue} onChange={(e) => {\n                            if(e.target.value>508){\n                              setAtuatorValue(508);\n                            } else if(e.target.value<0){\n                              setAtuatorValue(0);\n                            } else setAtuatorValue(e.target.value);\n                          }}/>\n                        ) : (\n                          <TextField label=\"Value\" type=\"number\" InputLabelProps={{shrink: true}} value={atuatorValue} onChange={(e) => {\n                            if(e.target.value<0){\n                              setAtuatorValue(0)\n                            } else setAtuatorValue(e.target.value);\n                          }}/>\n                        )\n                      }\n                      \n                    </FormControl>\n                </>\n              ) : (\n                <>\n                    {/* <br/>\n                    <br/> */}\n                    <FormControl className={classes.root}>\n                        <TextField\n                            id=\"startDate\"\n                            label=\"Start Date\"\n                            type=\"datetime-local\"\n                            defaultValue={new Date(Date.now() - tzoffset).toISOString().slice(0, -8)}\n                            InputProps={{ inputProps: { min: new Date(Date.now() - tzoffset).toISOString().slice(0, -8) } }}\n                            onChange={UpdateDate}\n                            helperText={err}\n                            className={classes.textField}\n                            InputLabelProps={{\n                            shrink: true,\n                            }}\n                        />\n                    </FormControl><br/>\n                    <FormControl className={classes.formControl}>\n                    <InputLabel id=\"demo-simple-select-label\">Atuator</InputLabel>\n                      <Select\n                        labelId=\"demo-simple-select-label\"\n                        id=\"demo-simple-select\"\n                        value={atuator}\n                        onChange={(e) => setAtuator(e.target.value)}\n                      >\n                        {\n                          Devices.map(device => (\n                            <MenuItem value={device.ieeeAddr} key={device.ieeeAddr}>{device.friendly_name}</MenuItem>\n                          ))\n                        }\n                      </Select>\n                    </FormControl>\n                    <FormControl className={classes.formControl}>\n                    <InputLabel>Parameter</InputLabel>\n                      <Select\n                        value={atuatorParameter}\n                        onChange={(e) => setAtuatorParameter(e.target.value)}\n                      >\n                        {\n                          atuatorParameters.map(item => (\n                            <MenuItem value={item} key={item}>{item}</MenuItem>\n                          ))\n                        }\n                      </Select>\n                    </FormControl>\n                    <FormControl className={classes.formControl}>\n                      {\n                        atuatorParameter === 'state' ? (\n                          <>\n                            <InputLabel>StateValue</InputLabel>\n                            <Select\n                              value={atuatorValue}\n                              onChange={(e) => setAtuatorValue(e.target.value)}\n                            >\n                              <MenuItem value=\"ON\">ON</MenuItem>\n                              <MenuItem value=\"OFF\">OFF</MenuItem>\n                          </Select>\n                          </>\n                        ) : atuatorParameter === 'occupancy' ? (\n                          <>\n                            <InputLabel id=\"demo-simple-select-label\">StateValue</InputLabel>\n                            <Select\n                              label=\"Value\"\n                              value={atuatorValue}\n                              onChange={(e) => setAtuatorValue(e.target.value)}\n                            >\n                              <MenuItem value=\"true\">true</MenuItem>\n                              <MenuItem value=\"false\">false</MenuItem>\n                          </Select>\n                          </>\n                        ) : atuatorParameter === 'brightness' ? (\n                          <TextField label=\"Number between 0 - 254\" type=\"number\"  InputLabelProps={{shrink: true}} value={atuatorValue} onChange={(e) => {\n                            if(e.target.value>254){\n                              setAtuatorValue(254);\n                            } else if(e.target.value<0){\n                              setAtuatorValue(0);\n                            } else setAtuatorValue(e.target.value);\n                          }}/>\n                        ) : atuatorParameter ==='color_temp' ? (\n                            <TextField label=\"Number between 0 - 508\" type=\"number\"  InputLabelProps={{shrink: true}} value={atuatorValue} onChange={(e) => {\n                              if(e.target.value>508){\n                                setAtuatorValue(508);\n                              } else if(e.target.value<0){\n                                setAtuatorValue(0);\n                              } else setAtuatorValue(e.target.value);\n                            }}/>\n                        ) : (\n                          <TextField label=\"Value\" type=\"number\" InputLabelProps={{shrink: true}} value={atuatorValue} onChange={(e) => {\n                            if(e.target.value<0){\n                              setAtuatorValue(0)\n                            }else setAtuatorValue(e.target.value);\n                          }}/>\n                        )\n                      }\n                    </FormControl>\n                </>\n              )\n            }\n            \n            {/* <br/>\n            <Button\n                    disabled={buttonStatus}\n                    className={classes.button}\n                    type=\"submit\"\n                    onClick={AddScene}\n            >\n                Submit\n            </Button> */}\n        </form>\n        // </div>\n    )\n\n    function UpdateDate(event){\n      const checkDate = Date.parse(event.target.value);\n      if(isNaN(checkDate) === false){\n          const date = new Date(event.target.value);\n          date.setSeconds(0)\n          date.setMilliseconds(0);\n          setStartDate(new Date(date - tzoffset).toISOString().slice(0, -5));\n          setErr('');\n      } else {\n          setErr('Invalid Date!!');\n      }\n  }\n\n  return (\n    <div>\n      <CustomizedIconButton\n                    size=\"small\"\n                    onClick={handleOpen}\n                    startIcon={<AddCircleIcon/>}\n                >\n                    Add Scene\n      </CustomizedIconButton>\n      <Dialog\n        open={open}\n        onClose={handleClose}\n        scroll={'paper'}\n        aria-labelledby=\"scroll-dialog-title\"\n        aria-describedby=\"scroll-dialog-description\"\n      >\n        <DialogTitle id=\"scroll-dialog-title\">Add Scene</DialogTitle>\n        <DialogContent dividers>\n            {body}\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose} color=\"secondary\">\n            Cancel\n          </Button>\n          <Button\n              disabled={buttonStatus}\n              color=\"primary\"\n              onClick={AddScene}\n          >\n                    Submit\n                </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}","import React, { useEffect, useState, useRef } from 'react';\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\nimport { Typography, Grid, Paper } from '@material-ui/core/';\nimport Switch from '@material-ui/core/Switch';\nimport AddScene from '../modals/AddScene';\nimport { IconButton } from '@material-ui/core';\nimport CloseIcon from '@material-ui/icons/Close';\n\nconst ColorSwitch = withStyles({\n    switchBase: {\n      color: '#fff',\n      '&$checked': {\n        color: '#fff',\n      },\n      '&$checked + $track': {\n        backgroundColor: '#00ff00',\n      },\n    },\n    checked: {},\n    track: {},\n  })(Switch);\n\n\nconst useStyles = makeStyles((theme) => ({\n    sem: {\n        paddingTop: 100,\n        textAlign: \"center\"\n    },\n  center: {\n      paddingTop: 30,\n      textAlign: \"center\"\n  },\n  grid: {\n      width: \"100%\",\n      margin: \"0px\",\n      justify: \"center\"\n      \n  },\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: \"center\",\n    color: \"#fff\",\n    background: \"#2d2d2e\",\n    borderRadius: '15px',\n    opacity: 0.8,\n  },\n  formControl: {\n    textAlign:\"center\",\n    margin: theme.spacing(1),\n    minWidth: 120,\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2),\n  },\n}));\n\nexport default function ScenesPage(props) {\n\n    const tzoffset = (new Date()).getTimezoneOffset() * 60000;\n\n    const socket = props.socket;\n\n    const classes = useStyles();\n\n    const [Scenes, setScenes] = useState([]);\n    const [Devices, setDevices] = useState([]);\n\n    const [datenow, setDateNow] = useState((new Date(Date.now() - tzoffset)).toISOString().slice(0, -5).replace(\"T\", \" \"));\n\n    const isCancelled = useRef(false);\n\n    useEffect(() => {\n        socket.emit(\"GETSCENES\");\n        socket.emit(\"GETDEVICES\");\n        socket.on(\"Scenes\", data => {\n            if(!isCancelled.current){\n                setScenes(data);\n            }\n        })\n        socket.on(\"Devices\", data => {\n            if(!isCancelled.current){\n                setDevices(data);\n            }\n        })\n        setInterval(() => {\n            if(!isCancelled.current){\n                setDateNow((new Date(Date.now() - tzoffset)).toISOString().slice(0, -5).replace(\"T\", \" \"));\n            }\n        }, 1000);\n        return () => {\n            isCancelled.current = true;\n        }\n    },[socket, tzoffset])\n\n    function changeStatus(scene, state){\n        socket.emit(\"SceneStatus\", {_id: scene, state: !state})\n        socket.emit(\"GETSCENES\");\n    }\n\n    function DeleteScene(event, id) {\n        event.preventDefault();\n        socket.emit(\"DeleteScene\", {_id: id});\n        socket.emit(\"GETSCENES\");\n      }\n\n    return (\n        <div>\n            <AddScene socket={socket}/>\n        <div className={classes.center}>\n            <h1>{datenow}</h1>\n            {/* <CustomizedIconButton\n                    component={Link}\n                    size=\"small\"\n                    to=\"/scenes_settings\"\n                    aria-label=\"settings from graphics\"\n                    aria-controls=\"menu-appbar\"\n                    aria-haspopup=\"true\"\n                    color=\"inherit\"\n                    startIcon={<SettingsIcon/>}\n                >\n                    Scenes Settings\n            </CustomizedIconButton> */}\n            {/* <br></br> */}\n            {\n                Scenes.length ? (\n                    <Grid\n                        container\n                        spacing={6}\n                        className={classes.grid}\n                    >\n                        {\n                            Scenes.map((scene) => (\n                                <Grid item xs={12} md={6} lg={4} key={scene._id}>\n                                    <Paper className={classes.paper}>\n                                        <Grid container justify=\"flex-end\" alignItems=\"flex-end\">\n                                            <IconButton style={{color: 'white'}} onClick={e => DeleteScene(e, scene._id)}>\n                                                <CloseIcon />\n                                            </IconButton>\n                                        </Grid>\n                                    { scene.sensor ? (\n                                            <>\n                                            <Typography variant=\"h6\">{Devices.map(device => device.ieeeAddr === scene.sensor ? (device.friendly_name) : false)}: IF {scene.conditionParameter}{scene.conditionOperator}{scene.conditionState} THEN</Typography>\n                                            <Typography variant=\"h6\">{Devices.map(device => device.ieeeAddr === scene.atuator ? (device.friendly_name) : false)} {scene.thenParameter} {scene.thenState}</Typography>\n                                            </>\n                                        ) : (\n                                            <>\n                                            <Typography variant=\"h6\">{scene.date} THEN</Typography>\n                                            <Typography variant=\"h6\">{Devices.map(device => device.ieeeAddr === scene.atuator ? (device.friendly_name) : false)} {scene.thenParameter} {scene.thenState}</Typography>\n                                            </>\n                                        )}\n                                        <ColorSwitch checked={scene.state} onChange={() => changeStatus(scene._id, scene.state)} />\n                                        </Paper>\n                                </Grid>\n                            ))\n                        }\n                    </Grid>\n                ) : (\n                    <div className={classes.sem}>\n                        <Typography variant=\"h3\">NO SCENES TO SHOW</Typography>\n                    </div>\n                )\n\n            }\n        </div>\n        </div>\n    )\n}\n","import React, { useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Button, TextField, Dialog, DialogTitle, DialogContent, DialogActions, Typography } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n    center: {\n        textAlign: \"center\"\n    },\n    modal: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center'\n    },\n    paper: {\n        backgroundColor: theme.palette.background.paper,\n        border: '2px solid #000',\n        boxShadow: theme.shadows[5],\n        padding: theme.spacing(2, 4, 3)\n    }\n}))\n\nexport default function EditDevice(props) {\n\n    const socket = props.socket;\n  \n    const classes = useStyles();\n\n    const [open, setOpen] = useState(false);\n\n    const [name, setName] = useState('');\n    const [buttonStatus, setButtonStatus] = useState(true);\n\n    const handleOpen = () => {\n        setOpen(true);\n    }\n\n    useEffect(() => {\n        if(name){\n            setButtonStatus(false);\n        } else {\n            setButtonStatus(true);\n        }\n    },[name])\n\n\n    const handleClose = () => {\n        setOpen(false)\n    }\n\n    const body = (\n        <div className={classes.center}>\n            <Typography>The old name of this device is {props.name}.</Typography>\n            <TextField id=\"edit-device\" style={{paddingTop: 10}} placeholder=\"Write new name here..\" value={name} onChange={e => setName(e.target.value)}/>\n        </div>\n    )\n  \n    function EditDevice() {\n        socket.emit(\"EditDevice\", {old_name: props.name, name: name});\n        handleClose();\n    }\n  \n    return(\n        <>\n            <Button variant=\"contained\" color=\"primary\" size=\"small\" onClick={handleOpen}>\n                Edit\n            </Button>\n            {/* <Modal\n                aria-labelledby=\"transition-modal-title\"\n                aria-describedby=\"transition-modal-description\"\n                className={classes.modal}\n                open={open}\n                onClose={handleClose}\n                closeAfterTransition\n                BackdropComponent={Backdrop}\n                BackdropProps={{\n                    timeout: 1000,\n                }}\n            >\n                <Fade in={open}>\n                    <div className={classes.paper}>\n                        <h2 id=\"transisiton-modal-title\">Edit Device</h2>\n                        <form onSubmit={SubmitDevice} className={classes.root}>\n                            <FormGroup>\n                                <FormLabel>The old name of this device is {props.name}.</FormLabel>\n                                <TextField id=\"standard-basic\" label=\"Write new one here...\" />\n                                <Button variant=\"contained\" color=\"primary\" type=\"submit\">\n                                    Submit\n                                </Button>\n                            </FormGroup>\n                        </form>\n                    </div>\n                </Fade>\n            </Modal> */}\n            <Dialog\n                open={open}\n                onClose={handleClose}\n            >\n                <DialogTitle>Edit name of the device</DialogTitle>\n                <DialogContent dividers>\n                    {body}\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={handleClose} color=\"secondary\">\n                        Cancel\n                    </Button>\n                    <Button\n                        disabled={buttonStatus}\n                        onClick={EditDevice}\n                        color=\"primary\"\n                    >\n                                Submit\n                        </Button>\n                </DialogActions>\n            </Dialog>\n        </>\n    )\n  }","import React, { useEffect, useState, useRef } from 'react';\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Grid, Paper, Button, TextField, MenuItem } from \"@material-ui/core\";\nimport DeleteIcon from '@material-ui/icons/Delete';\n\nimport EditDevice from '../modals/EditDevice';\n\nconst useStyles = makeStyles((theme) => ({\n    root:{\n        justifyContent: 'center'\n    },\n    grid: {\n      width: \"100%\",\n      margin: \"0px\",\n      \n    },\n    paper: {\n      padding: theme.spacing(2),\n      textAlign: \"center\",\n      color: \"#fff\",\n      opacity: 0.8,\n      borderRadius: '15px',\n      background: \"#2d2d2e\",\n    },\n    button: {\n      margin: theme.spacing(1),\n    },\n    ooo: {\n        justifyContent: 'center'\n    },\n    whiteColor: {\n        color: \"white\"\n      }\n  }));\n  \n\n// const Title = withStyles({\n//     root: {\n//       textAlign:\"center\",\n//       color: \"#000\",\n//       paddingTop: 10\n//     }\n//   })(Typography);\n\n// const CustomizedIconButton = withStyles({\n//     root:{\n//         textAlign: \"center\",\n//         background: '#000',\n//         color: '#fff',\n//         '&:hover': {\n//             backgroundColor: '#bbb',\n//             color: '#000'\n//         },\n//     }\n// })(Button)\n\n\n\nexport default function DevicesSettingsPage(props) {\n\n    const socket = props.socket;\n\n    const classes = useStyles();\n\n    const [devices, setDevices] = useState([]);\n    const [divisions, setDivisions] = useState([]);\n\n    const isCancelled = useRef(false);\n\n    useEffect(() => {\n        socket.emit(\"GETDIVISIONS\");\n        socket.emit(\"GETDEVICES\");\n        socket.on(\"Divisions\", data => {\n            if(!isCancelled.current){\n                setDivisions(data);\n            }\n        })\n        socket.on(\"Devices\", data => {\n            if(!isCancelled.current){\n                setDevices(data);\n            }\n        })\n        \n        return () => {\n            isCancelled.current = true;\n        }\n    },[socket])\n\n    async function RemoveDevice(item){\n        socket.emit(\"DeleteDevice\", { ieeeAddr: item});\n      }\n\n      const handleChange = (event, device) => {\n          if(!isCancelled.current){\n            socket.emit(\"UpdateDeviceDivision\", {ieeeAddr: device, division: event.target.value})\n          }\n      };\n\n    return (\n        <>\n        <div>\n            {/* <Title variant=\"h3\">Devices Settings</Title> */}\n            \n            <Grid container spacing={6} className={classes.grid}>\n                {\n                    devices.map(item => item.type !== \"Coordinator\" ? ( \n                    <Grid item xs={12} md={6} lg={3} key={item.ieeeAddr}>\n                        <Paper className={classes.paper}>\n                            {item.friendly_name ? <p>Name: <b>{item.friendly_name}</b></p> : false}\n                            {item.type ? <p>Type: <b>{item.type}</b></p> : false}\n                            {item.vendor ? <p>Vendor: <b>{item.vendor}</b></p> : false}\n                            {item.model ? <p>Model: <b>{item.model}</b></p> : false}\n                            {item.description ? <p>Description: <b>{item.description}</b></p> : false}\n                            <TextField\n                                id=\"standard-select-division\"\n                                style={{color: \"#fff\"}}\n                                select\n                                label=\"Select\"\n                                InputProps={{\n                                    className: classes.whiteColor\n                                  }}\n                                FormHelperTextProps={{\n                                    className: classes.whiteColor\n                                  }}\n                                value={item.division}\n                                onChange={(e) => handleChange(e, item.ieeeAddr)}\n                                helperText=\"Please select division for this device\"\n                                >\n                                {\n                                    \n                                    divisions.map((option) => (\n                                    <MenuItem key={option.name} value={option.name}>\n                                        {option.name}\n                                    </MenuItem>\n                                    ))\n                                }\n                            </TextField><br></br>\n                            <EditDevice name={item.friendly_name} socket={props.socket} />\n                            <Button\n                                size=\"small\" \n                                variant=\"contained\"\n                                color=\"secondary\"\n                                className={classes.button}\n                                startIcon={<DeleteIcon />}\n                                onClick={() => RemoveDevice(item.ieeeAddr)}\n                            >\n                                Delete\n                            </Button>\n                        </Paper>\n                    </Grid>\n                    ) : false)\n                }\n\n            </Grid>\n        </div>\n        </>\n    )\n}\n","import React, { useEffect, useState, useRef } from 'react';\nimport { Dialog, Button, Select, FormControl, MenuItem, InputLabel, DialogContent, DialogTitle, DialogActions } from '@material-ui/core';\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\n\n\nconst useStyles = makeStyles((theme) => ({\n    center: {\n        paddingTop: 20,\n        textAlign: \"center\"\n    },\n    formControl: {\n        textAlign:\"center\",\n        margin: theme.spacing(1),\n        minWidth: 120,\n    },\n    paper: {\n        position: 'absolute',\n        width: 400,\n        backgroundColor: theme.palette.background.paper,\n        border: '2px solid #000',\n        boxShadow: theme.shadows[5],\n        padding: theme.spacing(2, 4, 3),\n    }\n}))\n\n\nconst CustomizedIconButton = withStyles({\n    root:{\n        float: \"right\",\n        top: 15,\n        right: 20,\n        background: \"#2d2d2e\",\n        opacity: 0.7,\n        color: '#fff',\n        // border: \"0px\",\n        marginLeft: 20,\n        '&:hover': {\n            backgroundColor: '#fff',\n            color: '#000'\n        },\n    }\n})(Button)\n\nexport default function AddGraphic(props){\n    const socket = props.socket;\n\n    const classes = useStyles();\n    \n    const [open, setOpen] = useState(false);\n\n    const [Devices, setDevices] = useState([]);\n    const [Data, setData] = useState([]);\n\n    const [device, setDevice] = useState('');\n    const [parameter, setParameter] = useState('');\n    const [parameters, setParameters] = useState([]);\n\n    const [buttonStatus, setButtonStatus] = useState(true);\n\n    const isCancelled = useRef(false);\n\n    useEffect(() => {\n        // socket.emit(\"GETGRAPHICS\");\n        socket.emit(\"GETDEVICES\");\n        socket.emit(\"GETMEASUREMENTS\");\n        // socket.on(\"Graphics\", data => {\n        //     if(!isCancelled.current){\n        //         setListGraphics(data);\n        //     }\n        // })\n        socket.on(\"Devices\", data => {\n            if(!isCancelled.current){\n                setDevices(data);\n            }\n        })\n        socket.on(\"Measurements\", data => {\n            if(!isCancelled.current){\n                setData(data);\n            }\n        })\n        return () => {\n            isCancelled.current = true;\n        }\n    }, [socket])\n\n    useEffect(() => {\n        let ObjectParameters = Object.assign({}, ...Data.filter(item => item.device_id === device).splice(0,1))\n        let bannedParameters = ['_id','device_id','date','color','__v','linkquality'];\n        setParameters(Object.keys(ObjectParameters).filter(item => !bannedParameters.includes(item)))\n    },[device, Data])\n\n    useEffect(() => {\n        setParameter('');\n        setButtonStatus(true);\n    }, [device])\n\n    useEffect(() => {\n        if(parameter.length > 0){\n            setButtonStatus(false);\n        }\n    },[parameter])\n\n\n    const handleOpen = () => {\n        setOpen(true);\n    }\n\n    const handleClose = () => {\n        setOpen(false);\n    }\n\n    function AddGraphic(event){\n        event.preventDefault();\n        socket.emit(\"NewGraphic\", {device: device, parameter: parameter});\n        setOpen(false);\n        // socket.emit(\"GETGRAPHICS\");\n    }\n\n\n    const body = (\n        <>\n         <form className={classes.center}>\n                <FormControl className={classes.formControl}>\n                    <InputLabel>Device</InputLabel>\n                    <Select \n                        value={device}\n                        onChange={e => setDevice(e.target.value)}\n                    >\n                        {\n                            Devices.map(device => device.friendly_name !== 'Coordinator' ? (\n                                <MenuItem key={device.ieeeAddr} value={device.ieeeAddr}>\n                                    {device.friendly_name}\n                                </MenuItem>\n                            ) : false)\n                        }\n                    </Select>\n                </FormControl>\n                <FormControl className={classes.formControl}>\n                    <InputLabel>Parameter</InputLabel>\n                    <Select \n                        value={parameter}\n                        onChange={e => setParameter(e.target.value)}\n                    >\n                        {\n                            parameters.map(item => (\n                                <MenuItem key={item.toString()} value={item}>\n                                    {item}\n                                </MenuItem>\n                            ))\n                        }\n                    </Select>\n                </FormControl>\n            </form>\n        </>\n    )\n\n    return(\n        <div>\n            <CustomizedIconButton\n                    size=\"small\"\n                    onClick={handleOpen}\n                    startIcon={<AddCircleIcon/>}\n                >\n                    Add Graphic\n            </CustomizedIconButton>\n            {/* <button type=\"button\" onClick={handleOpen}>\n                Open Modal\n            </button> */}\n            <Dialog\n                open={open}\n                onClose={handleClose}\n                aria-labelledby=\"simple-modal-title\"\n                aria-describedby=\"simple-modal-description\"\n                style={{display:'flex',alignItems:'center',justifyContent:'center'}}\n            >\n                <DialogTitle id=\"customized-dialog-title\" onClose={handleClose}>\n                    Add Graphic\n                </DialogTitle>\n                <DialogContent dividers>\n                    {body}\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={handleClose} color=\"secondary\">\n                        Cancel\n                    </Button>\n                    <Button\n                            disabled={buttonStatus}\n                            onClick={AddGraphic}\n                            color=\"primary\"\n                            className={classes.button}\n                    >\n                        Submit\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        </div>\n    )\n}","import React, { useState, useRef, useEffect } from 'react';\nimport { TextField, Button, MenuItem, FormControl, InputLabel, Select, Dialog, DialogTitle, DialogContent  } from '@material-ui/core';\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\n\n// function getModalStyle() {\n//     const top = 15;\n\n//     return {\n//       top: `${top}%`,\n//       margin:'auto'\n//     };\n//   }\n\nconst useStyles = makeStyles((theme) => ({\n    center: {\n        paddingTop: 20,\n        textAlign: \"center\"\n    },\n    paper: {\n        position: 'absolute',\n        width: 400,\n        backgroundColor: theme.palette.background.paper,\n        border: '2px solid #000',\n        boxShadow: theme.shadows[5],\n        padding: theme.spacing(2, 4, 3),\n    },\n    modalStyle1:{\n        position:'absolute',\n        top:'10%',\n        margin: 'auto',\n        overflow:'scroll',\n        display:'block',\n        backgroundColor: theme.palette.background.paper,\n        border: '2px solid #000',\n        boxShadow: theme.shadows[5],\n        padding: theme.spacing(2, 4, 3),\n      },\n\n      formControl: {\n          textAlign:\"center\",\n          margin: theme.spacing(1),\n          minWidth: 200,\n      }\n}))\n\n\nconst CustomizedIconButton = withStyles({\n    root:{\n        float: \"right\",\n        top: 15,\n        right: 20,\n        background: \"#2d2d2e\",\n        opacity: 0.7,\n        color: '#fff',\n        // border: \"0px\",\n        marginLeft: 20,\n        '&:hover': {\n            backgroundColor: '#fff',\n            color: '#000'\n        },\n    }\n})(Button)\n\nexport default function AddCalculation(props){\n    const socket = props.socket;\n\n    const classes = useStyles();\n\n    // const [modalStyle] = useState(getModalStyle);\n\n    const [open, setOpen] = useState(false);\n\n    const [Data, setData] = useState([]);\n    const [Devices, setDevices] = useState([]);\n\n    const tzoffset = (new Date()).getTimezoneOffset() * 60000;\n  \n    const [tax, setTax] = useState(0);\n    // const [sumPower, setSumPower] = useState(0);\n\n    const [errStartDate, setErrStartDate] = useState('');\n    const [errEndDate, setErrEndDate] = useState('');\n\n    const [device, setDevice] = useState('');\n    const [parameter, setParameter] = useState('');\n    const [parameters, setParameters] = useState([]);\n    const [value, setValue] = useState(0);\n\n    const [startDate, setStartDate] = useState(new Date(Date.now() - tzoffset).toISOString().slice(0, -8));\n    const [endDate, setEndDate] = useState(new Date(Date.now() - tzoffset).toISOString().slice(0, -8));\n\n    const [datenow, setDateNow] = useState((new Date(Date.now() - tzoffset)).toISOString().slice(0, -5).replace(\"T\", \" \"));\n\n    const isCancelled = useRef(false);\n\n    const handleOpen = () => {\n        setOpen(true);\n    }\n\n    const handleClose = () => {\n        setOpen(false);\n    }\n\n    useEffect(() => {\n        socket.emit(\"GETDEVICES\");\n        socket.emit(\"GETMEASUREMENTS\");\n        socket.on(\"Devices\", data => {\n            if(!isCancelled.current){\n                setDevices(data);\n            }\n        })\n        socket.on(\"Measurements\", data => {\n            if(!isCancelled.current){\n                setData(data);\n            }\n        })\n        setInterval(() => {\n                if(!isCancelled.current){\n                    setDateNow((new Date(Date.now() - tzoffset)).toISOString().slice(0, -5).replace(\"T\", \" \"));\n                }\n        }, 1000);\n        return () => {\n            isCancelled.current = true;\n        }\n    }, [socket, tzoffset])\n\n    useEffect(() => {\n        let ObjectParameters = Object.assign({}, ...Data.filter(item => item.device_id === device).splice(0,1))\n        let bannedParameters = ['_id','device_id','date','color','__v','linkquality'];\n        setParameters(Object.keys(ObjectParameters).filter(item => !bannedParameters.includes(item)))\n    },[device, Data])\n\n    useEffect(() => {\n        setParameter('');\n    }, [device])\n\n    useEffect(() => {\n        if(Data && endDate && startDate && endDate && startDate < endDate && device && parameter){\n            const DataFromDevice = Data.filter(element => element.device_id === device).reverse();\n            const startDateMilliseconds = new Date(startDate).getTime();\n            const endDateMilliseconds = new Date(endDate).getTime();\n            let ParameterData = [];\n            let Dates = [];\n            let AllDates = [];\n            DataFromDevice.forEach((element, index) => {\n                const date = new Date(new Date(element.date) - tzoffset).toISOString().slice(0, -5)\n                if( date > startDate && date < endDate ){\n                    ParameterData.push(element[parameter]);\n                    Dates.push(date);\n                } \n                AllDates.push(new Date(element.date).getTime());\n            })\n            Dates.splice(0, 0, startDate);\n            Dates.splice(Dates.length, 0, endDate);\n            // console.log('aqui');\n            let start = Math.max(...AllDates.filter(num => num <= startDateMilliseconds));\n            let end = Math.max(...AllDates.filter(num => num <= endDateMilliseconds));\n            DataFromDevice.forEach(element => new Date(element.date).getTime() === start ? (\n                ParameterData.splice(0, 0, element[parameter])\n            ) : false)\n            DataFromDevice.forEach(element => new Date(element.date).getTime() === end ? (\n                ParameterData.splice(ParameterData.length, 0, element[parameter])\n            ) : false)\n            // console.log(ParameterData);\n            let TimeIntervals = Dates.map(i => new Date(i).getTime());\n            let Intervals = TimeIntervals.slice(1).map((x,i) => x - TimeIntervals[i]);\n            let sum = [];\n            for (let i = 0; i < ParameterData.length; i++){\n                if(ParameterData[i+1])\n\t                sum.push(((ParameterData[i]+ParameterData[i+1])/2)*Intervals[i])\n            }\n            const numerator = sum.reduce((a, b) => a + b, 0);\n            const denominator = Intervals.reduce((a, b) => a + b, 0);\n            setValue((numerator/denominator).toFixed(2));\n        }\n\n    }, [Data, endDate, startDate, tzoffset, device, parameter])\n\n    function UpdateStartDate(event){\n        const checkDate = Date.parse(event.target.value);\n        if(isNaN(checkDate) === false){\n            const date = new Date(event.target.value);\n            date.setSeconds(0)\n            date.setMilliseconds(0);\n            setStartDate(new Date(date - tzoffset).toISOString().slice(0, -5));\n            setErrStartDate('');\n        } else {\n            setErrStartDate('Invalid Date!!');\n        }\n    }\n\n    function UpdateEndDate(event){\n        const checkDate = Date.parse(event.target.value);\n        if(isNaN(checkDate) === false){\n            const date = new Date(event.target.value);\n            date.setSeconds(0)\n            date.setMilliseconds(0);\n            setEndDate(new Date(date - tzoffset).toISOString().slice(0, -5));\n            setErrEndDate('');\n        } else {\n            setErrEndDate('Invalid Date!!');\n        }\n    }\n\n    useEffect(() => {\n        if(startDate > endDate){\n            setErrStartDate('Invalid Date');\n            setErrEndDate('Invalid Date');\n        } else {\n            setErrStartDate('');\n            setErrEndDate('');\n        }\n    },[startDate, endDate])\n\n\n    const body = (\n        <div className={classes.center}>\n            <h1>{datenow}</h1>\n            <FormControl className={classes.formControl}>\n                    <InputLabel>Select the device:</InputLabel>\n                    <Select \n                            id=\"device\"\n                            value={device}\n                            onChange={(e) => setDevice(e.target.value)}\n                          >\n                            {\n                              Devices.map(device => (\n                                <MenuItem value={device.ieeeAddr} key={device.ieeeAddr}>{device.friendly_name}</MenuItem>\n                              ))\n                            }\n                          </Select>\n                          <FormControl className={classes.formControl}>\n                    <InputLabel>Parameter</InputLabel>\n                    <Select \n                        id=\"parameter\"\n                        value={parameter}\n                        onChange={e => setParameter(e.target.value)}\n                    >\n                        {\n                            parameters.map(item => (\n                                <MenuItem key={item.toString()} value={item}>\n                                    {item}\n                                </MenuItem>\n                            ))\n                        }\n                    </Select>\n                </FormControl><br/>\n            </FormControl>\n            <form noValidate className={classes.root}>\n                <TextField\n                    id=\"startDate\"\n                    style={{paddingRight: 6}}\n                    label=\"Start Date\"\n                    type=\"datetime-local\"\n                    defaultValue={new Date(Date.now() - tzoffset).toISOString().slice(0, -8)}\n                    InputProps={{ inputProps: { max: new Date(Date.now() - tzoffset).toISOString().slice(0, -8) } }}\n                    onChange={UpdateStartDate}\n                    helperText={errStartDate}\n                    className={classes.textField}\n                    InputLabelProps={{\n                    shrink: true,\n                    }}\n                />\n                <TextField\n                    id=\"endDate\"\n                    label=\"End Date\"\n                    type=\"datetime-local\"\n                    defaultValue={new Date(Date.now() - tzoffset).toISOString().slice(0, -8)}\n                    InputProps={{ inputProps: { max: new Date(Date.now() - tzoffset).toISOString().slice(0, -8) } }}\n                    onChange={UpdateEndDate}\n                    helperText={errEndDate}\n                    className={classes.textField}\n                    InputLabelProps={{\n                    shrink: true,\n                    }}\n                />\n            </form>\n            <br></br>\n            \n            {\n                parameter === 'power' ? (\n                    <>\n                        <h3>Average Power≈ {value} W</h3>\n                        <TextField\n                            label=\"Tax\"\n                            type=\"number\"\n                            onChange={e => setTax(e.target.value)}\n                            InputLabelProps={{\n                                shrink: true,\n                            }}\n                        />\n                        <p>Energy: {(value*(new Date(endDate).getTime() - new Date(startDate).getTime())/1000).toFixed(2)} J = {((value*(new Date(endDate).getTime() - new Date(startDate).getTime())/1000)/3.6e6)} kWh</p>\n                        <p>Price: {(((value*(new Date(endDate).getTime() - new Date(startDate).getTime())/1000)/3.6e6)*tax)}€</p>\n                    </>\n                ) : parameter === 'brightness' ? (\n                    <h3>Average Brightness≈ {(value * 100/255).toFixed(0)}%</h3>\n                ) : parameter === 'color_temp' ? (\n                    <h3>Average Color Temperature≈ {(value * 100/510).toFixed(0)} %</h3>\n                ) : parameter === 'temperature' ? (\n                    <h3>Average Temperature≈ {value}ºC</h3>\n                ) : parameter === 'voltage' ? (\n                    value > 1000 ? (<h3>Average Voltage≈ {value} mV</h3>) : (<h3>Average Voltage≈ {value} V</h3>)\n                ) : parameter === 'humidity' ? (\n                    <h3>Average Humidity≈ {value}%</h3>\n                ) : parameter === 'pressure' ? (\n                    <h3>Average Pressure≈ {value}mBar</h3>\n                ) : parameter === 'current' ? (\n                    <h3>Average Current≈ {value}A</h3>\n                ) : parameter === 'consumption' ? (\n                    <h3>Average Consumption≈ {value}W</h3>\n                ) : false\n            }\n        </div>\n    )\n\n    return(\n        <div>\n            <CustomizedIconButton\n                    size=\"small\"\n                    onClick={handleOpen}\n                    startIcon={<AddCircleIcon/>}\n                >\n                    Set Calculation\n            </CustomizedIconButton>\n            <Dialog\n                open={open}\n                onClose={handleClose}\n                scroll={'paper'}\n            >\n                <DialogTitle id=\"scroll-dialog-title\">Calculate average value</DialogTitle>\n                <DialogContent dividers>\n                    {body}\n                </DialogContent>\n            </Dialog>\n        </div>\n    )\n}","import React, { useState, useEffect, useRef } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Grid, Typography, Paper } from '@material-ui/core/';\nimport { Line } from 'react-chartjs-2';\nimport CloseIcon from '@material-ui/icons/Close';\nimport { IconButton } from '@material-ui/core';\n\nimport AddGraphic from '../modals/AddGraphic';\nimport AddCalculation from '../modals/AddCalculation';\n\n\nconst useStyles = makeStyles((theme) => ({\n    sem: {\n        paddingTop: 100,\n        textAlign: \"center\"\n    },\n    grid: {\n        width: \"100%\",\n        margin: \"0px\"\n    },\n    paper: {\n        padding: theme.spacing(2),\n        textAlign: \"center\",\n        color: \"#000\",\n        // width: 600\n    }\n}))\n\n\nexport default function GraphicsPage(props) {\n\n    const tzoffset = (new Date()).getTimezoneOffset() * 60000;\n\n    const socket = props.socket;\n\n    const classes = useStyles();\n\n    const [ListGraphics, setListGraphics] = useState([]);\n    const [Devices, setDevices] = useState([]);\n    const [Data, setData] = useState([]);\n    const [chartData, setChartData] = useState([]);\n\n    const isCancelled = useRef(false);\n\n    useEffect(() => {\n        socket.emit(\"GETGRAPHICS\");\n        socket.emit(\"GETMEASUREMENTS\");\n        socket.emit(\"GETDEVICES\");\n        socket.on(\"ListGraphics\", data => {\n            if(!isCancelled.current){\n                setListGraphics(data);\n            }\n        })\n        socket.on(\"Devices\", data => {\n            if(!isCancelled.current){\n                setDevices(data);\n            }\n        })\n        socket.on(\"Measurements\", data => {\n            if(!isCancelled.current){\n                setData(data);\n            }\n        })\n        return () => {\n            isCancelled.current = true;\n        }\n    },[socket])\n\n    useEffect(() => {\n        let chartData = [];\n        // const CutData = [];\n        // const CutData = Data.splice(0,500);\n        setChartData([]);\n        ListGraphics.forEach(i => {\n            let paramData = [];\n            let dates = [];\n            let name = '';\n            let CutData = [];\n            const DataFromEachDevice = Data.filter(element => element.device_id === i.device).reverse();\n            if (DataFromEachDevice.length > 100){\n                CutData = DataFromEachDevice.slice(DataFromEachDevice.length - 100, DataFromEachDevice.length);\n            } else {\n                CutData = DataFromEachDevice;\n            }\n            Devices.forEach(device => device.ieeeAddr === i.device ? name = device.friendly_name : false);\n            CutData.forEach(element => {\n                if(element.device_id === i.device){\n                    if(i.parameter === \"state\"){\n                        if (element[i.parameter] === \"ON\") {\n                            paramData.push(true)\n                        } else if (element[i.parameter] === \"OFF\"){\n                            paramData.push(false)\n                        }\n                        dates.push(new Date(element.date).toLocaleString());\n                    } else if (i.parameter === \"occupancy\"){\n                        if (element[i.parameter] === \"true\") {\n                            paramData.push(true)\n                        } else if (element[i.parameter] === \"false\"){\n                            paramData.push(false)\n                        }\n                        dates.push(new Date(new Date(element.date) - tzoffset).toISOString().slice(0, -5).replace(/T/, ' '))\n                        // dates.push(new Intl.DateTimeFormat(\"en-GB\",{\n                        //     year: \"2-digit\",\n                        //     month: \"2-digit\",\n                        //     day: \"2-digit\",\n                        //     hour: 'numeric', minute: 'numeric', second: 'numeric'\n                        // }).format(new Date(element.date)));\n                    } else if (i.parameter === 'brightness'){\n                        paramData.push((element[i.parameter]*100/255).toFixed(0));\n                        dates.push(new Date(new Date(element.date) - tzoffset).toISOString().slice(0, -5).replace(/T/, ' '))\n                    } else if (i.parameter === 'color_temp'){\n                        paramData.push((element[i.parameter]*100/510).toFixed(0));\n                        dates.push(new Date(new Date(element.date) - tzoffset).toISOString().slice(0, -5).replace(/T/, ' '))\n                    }\n                    else {\n                        paramData.push(element[i.parameter]);\n                        // dates.push(new Date(element.date).toISOString().replace(/T/, ' ').replace(/\\..+/, ''))     // delete the dot and everything after)\n                        dates.push(new Date(new Date(element.date) - tzoffset).toISOString().slice(0, -5).replace(/T/, ' '))\n                        // dates.push(new Intl.DateTimeFormat(\"en-GB\",{\n                        //     year: \"2-digit\",\n                        //     month: \"2-digit\",\n                        //     day: \"2-digit\",\n                        //     hour: 'numeric', minute: 'numeric', second: 'numeric'\n                        // }).format(new Date(element.date)));\n                    }\n                }\n            })\n            chartData.push({\n                labels: dates,\n                datasets: [{\n                    label: `${i.parameter} of ${name}`,\n                    steppedLine: true,\n                    data: paramData,\n                    fill: false,\n                    lineTension: 0.1,\n                    backgroundColor: 'rgba(45, 45, 46, 0.69)',\n                    borderColor: 'rgba(45, 45, 46, 0.69)',\n                    borderCapStyle: 'butt',\n                    borderDash: [],\n                    borderDashOffset: 0.0,\n                    borderJoinStyle: 'miter',\n                    pointBorderColor: 'rgba(45, 45, 46, 0.69)',\n                    pointBackgroundColor: '#fff',\n                    pointBorderWidth: 1,\n                    pointHoverRadius: 5,\n                    pointHoverBackgroundColor: 'rgba(45, 45, 46, 0.69)',\n                    pointHoverBorderColor: 'rgba(45, 45, 46, 0.69)',\n                    pointHoverBorderWidth: 2,\n                    pointRadius: 1,\n                    pointHitRadius: 10\n                }]\n            })\n            setChartData(chartData);\n        })\n    },[ListGraphics, Data, Devices, tzoffset])\n\n    const options = {\n        scales: {\n          xAxes: [{\n                    ticks: {\n                       reverse: false,\n                       maxTicksLimit: 8,\n                       fontSize: 10\n                    },\n                    gridLines: {\n                        display:false\n                    }\n          }],\n          yAxes: [{\n              ticks: {\n                maxTicksLimit: 5\n              },\n              gridLines: {\n                display:true\n              }\n          }]\n      }\n    };\n\n    function DeleteGraphic(parameter, friendly_name) {\n        let ieeeAddr = '';\n        Devices.map(device => device.friendly_name === friendly_name ? (\n            ieeeAddr = device.ieeeAddr\n        ) : false)\n        socket.emit(\"DeleteGraphic\", {device: ieeeAddr, parameter: parameter});\n        // socket.emit(\"GETGRAPHICS\")\n    }\n\n    return (\n        <div>\n            {/* <Title variant=\"h4\">Graphics</Title> */}\n            \n            <AddGraphic socket={socket}/>\n            <AddCalculation socket={socket} />\n            {/* <CustomizedIconButton\n                    component={Link}\n                    size=\"small\"\n                    to=\"/graphics_settings\"\n                    aria-label=\"settings from graphics\"\n                    aria-controls=\"menu-appbar\"\n                    aria-haspopup=\"true\"\n                    color=\"inherit\"\n                    startIcon={<SettingsIcon/>}\n                >\n                    Graphics Settings\n            </CustomizedIconButton> */}\n            {\n                chartData.length ? (\n                    <Grid container spacing={6} className={classes.grid}>\n                                {\n                                    chartData.map((n, index) => {\n                                        return(\n                                            <Grid item xs={12} md={6} lg={6} key={index}>\n                                                <Paper className={classes.paper}>\n                                                    <Grid container justify=\"flex-end\" alignItems=\"flex-end\">\n                                                        <IconButton style={{color: 'black'}} onClick={() => DeleteGraphic((n.datasets[0].label).substring(0,(n.datasets[0].label).indexOf(' ')), (n.datasets[0].label).substring((n.datasets[0].label).indexOf('of ')+3,(n.datasets[0].label).length))}>\n                                                            <CloseIcon />\n                                                        </IconButton>\n                                                    </Grid>\n                                                    <Line key={index} data={n} options={options} />\n                                                </Paper>\n                                            </Grid>\n                                        )\n                                    })\n                                }\n                            </Grid>\n                ) : (\n                    <div className={classes.sem}>\n                        <Typography variant=\"h3\">NO GRAPHICS TO SHOW</Typography>\n                    </div>\n                )\n            }\n            \n        </div>\n    )\n}\n","import React from 'react';\nimport { Route, Switch, BrowserRouter } from 'react-router-dom';\nimport io from 'socket.io-client';\nimport img from './pexels-photo-531880.jpeg';\n// import app from './Auth/base';\n\nimport NavBar from './NavBar.js';\nimport DevicesPage from './screens/DevicesPage';\nimport DivisionsPage from './screens/DivisionsPage';\nimport ScenesPage from './screens/ScenesPage';\n// import GraphicsPage from './screens/GraphicsPage';\nimport DevicesSettingsPage from './screens/DevicesSettingsPage';\nimport StatisticsPage from './screens/StatisticsPage';\n\nconst styles = {\n  app: {\n      backgroundImage: `url(${img})`,\n      height: '100%',\n      minHeight : '100vh'\n  }\n};\n\nconst ENDPOINT = \"http://188.251.221.203:8000\";\nconst socket = io(ENDPOINT, {transports: ['websocket', 'polling', 'flashsocket']})\n\nfunction Home() {\n    \n  return (\n    <div style={styles.app}>\n    <BrowserRouter>\n      <NavBar />\n      <Switch>\n        <Route exact path='/' render={(props) => (<DevicesPage {...props} socket={socket}/>)} />\n        <Route exact path='/divisions' render={(props) => (<DivisionsPage {...props} socket={socket}/>)} />\n        <Route exact path='/scenes' render={(props) => (<ScenesPage {...props} socket={socket}/>)} />\n        {/* <Route exact path='/graphics' render={(props) => (<GraphicsPage {...props} socket={socket}/>)}/> */}\n        <Route exact path='/statistics' render={(props) => (<StatisticsPage {...props} socket={socket}/>)}/>\n        <Route exact path='/devices_settings' render={(props) => (<DevicesSettingsPage {...props} socket={socket}/>)}/>\n      </Switch>\n    </BrowserRouter>\n    </div>\n  );\n}\n\nexport default Home;\n\n\n","import React, { useEffect, useState } from 'react';\nimport app from './base.js';\n\nexport const AuthContext = React.createContext();\n\nexport const AuthProvider = ({ children }) => {\n    const [currentUser, setCurrentUser] = useState(null);\n\n    useEffect(() => {\n        app.auth().onAuthStateChanged(setCurrentUser);\n    }, [])\n\n    return(\n        <AuthContext.Provider\n            value={{\n                currentUser\n            }}\n        >\n            {children}\n        </AuthContext.Provider>\n    )\n}","import React, { useCallback, useContext } from 'react';\nimport { withRouter, Redirect } from 'react-router';\nimport app from './base';\nimport { AuthContext } from './Auth';\nimport { Avatar, Button, CssBaseline, TextField, Typography, Container} from '@material-ui/core';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport { makeStyles } from '@material-ui/core/styles';\n\n\nconst useStyles = makeStyles((theme) => ({\n  container: {\n      backgroundColor: '#bbb',\n    height: \"100%\",\n    minHeight: \"100vh\"\n  },\n  paper: {\n    // marginTop: theme.spacing(8),\n    paddingTop: 70,\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\nfunction SignUp({history}) {\n  const classes = useStyles();\n\n  const handleSignUp = useCallback(async event => {\n    event.preventDefault();\n    const { email, password } = event.target.elements;\n    try {\n        await app\n            .auth()\n            .createUserWithEmailAndPassword(email.value, password.value);\n        history.push('/');\n    } catch (error) {\n        alert(error);\n    }\n  }, [history])\n\n  const { currentUser } = useContext(AuthContext);\n\n    if(currentUser){\n        return <Redirect to='/' />;\n    }\n\n  return (\n    <div className={classes.container}>\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          Sign Up\n        </Typography>\n        <form className={classes.form} noValidate onSubmit={handleSignUp}>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"email\"\n            placeholder=\"Email\"\n            // label=\"Email Address\"\n            name=\"email\"\n            // autoComplete=\"email\"\n            autoFocus\n          />\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            name=\"password\"\n            placeholder=\"Password\"\n            // label=\"Password\"\n            type=\"password\"\n            id=\"password\"\n            // autoComplete=\"current-password\"\n          />\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n          >\n            Sign Up\n          </Button>\n        </form>\n      </div>\n    </Container>\n    </div>\n  );\n}\n\nexport default withRouter(SignUp);","import React, { useCallback, useContext } from 'react';\nimport { withRouter, Redirect } from 'react-router';\nimport app from './base';\nimport { AuthContext } from './Auth';\nimport { Avatar, Button, CssBaseline, TextField, Typography, Container} from '@material-ui/core';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport { makeStyles } from '@material-ui/core/styles';\n\n\nconst useStyles = makeStyles((theme) => ({\n  container: {\n      backgroundColor: '#bbb',\n    height: \"100%\",\n    minHeight: \"100vh\"\n  },\n  paper: {\n    // marginTop: theme.spacing(8),\n    paddingTop: 70,\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\nfunction Login({history}) {\n  const classes = useStyles();\n\n  const handleLogin = useCallback(\n    async event => {\n        event.preventDefault();\n        const { email, password } = event.target.elements;\n        try {\n            await app\n                .auth()\n                .signInWithEmailAndPassword(email.value, password.value);\n            history.push('/');\n        } catch (error) {\n            alert(error);\n        }\n    }, [history]\n  );\n\n  const { currentUser } = useContext(AuthContext);\n\n    if(currentUser){\n        return <Redirect to='/' />;\n    }\n\n  return (\n    <div className={classes.container}>\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          Login\n        </Typography>\n        <form className={classes.form} noValidate onSubmit={handleLogin}>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"email\"\n            placeholder=\"Email\"\n            // label=\"Email Address\"\n            name=\"email\"\n            // autoComplete=\"email\"\n            autoFocus\n          />\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            name=\"password\"\n            placeholder=\"Password\"\n            // label=\"Password\"\n            type=\"password\"\n            id=\"password\"\n            // autoComplete=\"current-password\"\n          />\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n          >\n            Log In\n          </Button>\n        </form>\n      </div>\n    </Container>\n    </div>\n  );\n}\n\nexport default withRouter(Login);","import React, { useContext } from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { AuthContext } from './Auth';\n\nconst PrivateRoute = ({ component: RouteComponent, ...rest}) => {\n    const { currentUser } = useContext(AuthContext);\n\n    return(\n        <Route\n            {...rest}\n            render={routeProps => \n                !!currentUser ? (\n                   <> \n                    <RouteComponent {...routeProps} />\n                   </>\n                ) : (\n                    <Redirect to={\"/login\"} />\n                )\n            }\n        />\n    )\n}\n\nexport default PrivateRoute;","import React from 'react';\nimport './App.css';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport Home from './Home';\nimport SignUp from './Auth/NewSignUp';\nimport Login from './Auth/NewLogin';\n\nimport { AuthProvider } from './Auth/Auth'; \nimport PrivateRoute from './Auth/PrivateRoute';\n\nfunction App(){\n  return(\n    <AuthProvider>\n      <Router>\n        <div>\n          <PrivateRoute exact path=\"/\" component={Home} />\n          <Route exact path=\"/login\" component={Login} />\n          <Route exact path=\"/signup\" component={SignUp} />\n        </div>\n      </Router>\n    </AuthProvider>\n  )\n}\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />,document.getElementById('root'));\n\n"],"sourceRoot":""}